"use strict";(self.webpackChunkLunarVim_com=self.webpackChunkLunarVim_com||[]).push([[261],{1369:(a,n,s)=>{s.r(n),s.d(n,{data:()=>e});const e={key:"v-62d9645f",path:"/languages/c_cpp.html",title:"C/C++",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Install Syntax Highlighting",slug:"install-syntax-highlighting",children:[]},{level:2,title:"Install Language Server",slug:"install-language-server",children:[]},{level:2,title:"Formatters",slug:"formatters",children:[]},{level:2,title:"LSP Settings",slug:"lsp-settings",children:[]}],filePathRelative:"languages/c_cpp.md",git:{updatedTime:162871462e4,contributors:[{name:"Pasi Bergman",email:"pasi.bergman@iki.fi",commits:2}]}}},6643:(a,n,s)=>{s.r(n),s.d(n,{default:()=>f});var e=s(6252);const t=(0,e.uE)('<h1 id="c-c" tabindex="-1"><a class="header-anchor" href="#c-c" aria-hidden="true">#</a> C/C++</h1><h2 id="install-syntax-highlighting" tabindex="-1"><a class="header-anchor" href="#install-syntax-highlighting" aria-hidden="true">#</a> Install Syntax Highlighting</h2><div class="language-vim ext-vim line-numbers-mode"><pre class="language-vim"><code><span class="token punctuation">:</span>TSInstall <span class="token keyword">c</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-vim ext-vim line-numbers-mode"><pre class="language-vim"><code><span class="token punctuation">:</span>TSInstall cpp\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="install-language-server" tabindex="-1"><a class="header-anchor" href="#install-language-server" aria-hidden="true">#</a> Install Language Server</h2><p>Install <code>clangd</code> language server</p><div class="language-vim ext-vim line-numbers-mode"><pre class="language-vim"><code><span class="token punctuation">:</span>LspInstall cpp\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',7),l=(0,e.Uk)("List of other "),p={href:"https://github.com/neovim/nvim-lspconfig/blob/master/CONFIG.md",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("available language servers"),r=(0,e.Uk)(". If "),i=(0,e._)("code",null,":LspInstall",-1),c=(0,e.Uk)(" does not have support for installing the language server, you need to install it separately."),u=(0,e.uE)('<h2 id="formatters" tabindex="-1"><a class="header-anchor" href="#formatters" aria-hidden="true">#</a> Formatters</h2><p><code>clangd</code> language server supports formatting. Optionally <code>uncrustify</code> and <code>clang_format</code> can be used as a formatter. Optional formatter will disable language server formatter.</p><p>Configuration in <code>~/.config/lvim/config.lua</code></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token comment">-- exe value can be &quot;clang_format&quot; or &quot;uncrustify&quot;</span>\nlvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>c<span class="token punctuation">.</span>formatters <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">{</span> exe <span class="token operator">=</span> <span class="token string">&quot;clang_format&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\nlvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>cpp<span class="token punctuation">.</span>formatters <span class="token operator">=</span> lvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>c<span class="token punctuation">.</span>formatters\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>The selected formatter must be installed separately.</p><h2 id="lsp-settings" tabindex="-1"><a class="header-anchor" href="#lsp-settings" aria-hidden="true">#</a> LSP Settings</h2><p>E.g. use of other language server:</p><div class="language-vim ext-vim line-numbers-mode"><pre class="language-vim"><code>lvim<span class="token operator">.</span>lang<span class="token operator">.</span><span class="token keyword">c</span><span class="token operator">.</span><span class="token builtin">lsp</span><span class="token operator">.</span>provider <span class="token operator">=</span> <span class="token string">&quot;&lt;LS identifier&gt;&quot;</span>\nlvim<span class="token operator">.</span>lang<span class="token operator">.</span><span class="token keyword">c</span><span class="token operator">.</span><span class="token builtin">lsp</span><span class="token operator">.</span>setup<span class="token operator">.</span>cmd <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;path to executable&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;arg1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;arg2&quot;</span> <span class="token punctuation">}</span>\nlvim<span class="token operator">.</span>lang<span class="token operator">.</span>cpp<span class="token operator">.</span><span class="token builtin">lsp</span><span class="token operator">.</span>provider <span class="token operator">=</span> <span class="token string">&quot;&lt;LS identifier&gt;&quot;</span>\nlvim<span class="token operator">.</span>lang<span class="token operator">.</span>cpp<span class="token operator">.</span><span class="token builtin">lsp</span><span class="token operator">.</span>setup<span class="token operator">.</span>cmd <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;path to executable&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;arg1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;arg2&quot;</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',8),g=(0,e._)("code",null,"<LS identifier>",-1),d=(0,e.Uk)(" must be one supported by "),m=(0,e._)("code",null,"nvim-lspconfig",-1),k=(0,e.Uk)(". "),v={href:"https://github.com/neovim/nvim-lspconfig/blob/master/CONFIG.md",target:"_blank",rel:"noopener noreferrer"},h=(0,e.Uk)("List of available LSP configs"),b={},f=(0,s(3744).Z)(b,[["render",function(a,n){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[l,(0,e._)("a",p,[o,(0,e.Wm)(s)]),r,i,c]),u,(0,e._)("p",null,[g,d,m,k,(0,e._)("a",v,[h,(0,e.Wm)(s)])])],64)}]])},3744:(a,n)=>{n.Z=(a,n)=>{for(const[s,e]of n)a[s]=e;return a}}}]);